{#
/**
 * @file
 *
 * Default theme implementation for profiles.
 *
 * Available variables:
 * - content: Items for the content of the profile.
 *   Use 'content' to print them all, or print a subset such as
 *   'content.title'. Use the following code to exclude the
 *   printing of a given child element:
 *   @code
 *   {{ content|without('title') }}
 *   @endcode
 * - attributes: HTML attributes for the wrapper.
 * - view_mode: The profile view mode used.
 * - profile: The profile object.
 * - url: The profile URL, if available.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 *
 * @ingroup themeable
 */
#}


  <div class="card">
    <div class="cover-photo">

        {% if content.field_pic.0 is not empty %}
          <div class="profile">{{ content.field_pic.0 }}</div>
        {% else %}
        <div class="profile">
          <svg class="absolute w-12 h-12 text-gray-400 -left-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path></svg>
        </div>
        {% endif %}
    </div>
    <h3 class="profile-name">{{ content.field_first_name.0 }} {{ content.field_last_name.0 }}</h3>
    <p class="about">{{ content.field_heritage_region.0 }} / {{ content.field_heritage_country.0 }}<br>
  
    <div class="about-2">
      <div>{{ content.field_city.0 }}&nbsp;/&nbsp;</div>
      <div>{{ content.field_state.0 }}</div>
    </div>
  


    {% if user.isAuthenticated %}
    <input type="checkbox" id="toggleCheckbox-{{ profile.id }}" class="toggle-checkbox">
    <label for="toggleCheckbox-{{ profile.id }}" class="btn light">Contact</label>
    <div class="card-contact-wrapper">
      {% if content.field_phone.0 is not empty %}
      <div class="card-contact phone">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
              stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path
                  d="M22 16.92v3a2 2 0 01-2.18 2 19.79 19.79 0 01-8.63-3.07 19.5 19.5 0 01-6-6 19.79 19.79 0 01-3.07-8.67A2 2 0 014.11 2h3a2 2 0 012 1.72 12.84 12.84 0 00.7 2.81 2 2 0 01-.45 2.11L8.09 9.91a16 16 0 006 6l1.27-1.27a2 2 0 012.11-.45 12.84 12.84 0 002.81.7A2 2 0 0122 16.92z">
              </path>
          </svg>
          <a href='tel:{{ content.field_phone.0 }}'>{{ content.field_phone.0 }}</a>
      </div>
      {% endif %}
      {% if content.field_email.0 is not empty %}
          <div class="card-contact email">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
                  stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
                  <path d="M22 6l-10 7L2 6"></path>
              </svg>
              <a href='mailto:{{ content.field_email.0 }}'>{{ content.field_email.0 }}</a>
          </div>
          {% endif %}
          {% if content.field_phone.0 is empty and content.field_email.0 is empty %}
          Contact info not shared
        {% endif %}
      </div>


    {% else %}

      <div class="trigger-modal btn light">Contact</div>




    
      <div class="modal-overlay">
        <div class="modal">
          <label for="modal-toggle" class="close-btn">&#x2715;</label>
          <a class="btn" href="/user/login">Login</a>
          <div class="or">OR</div>
          <a class="btn" href="/user/register">Create Account</a>
        </div>
      </div>
    {% endif %}
    
    
    <script>
      document.addEventListener("DOMContentLoaded", function() {
        var modalOverlay = document.querySelector(".modal-overlay");
        var triggerButtons = document.querySelectorAll(".trigger-modal");
        var closeButton = document.querySelector(".close-btn");
    
        // Only proceed if there is at least one button
        if (triggerButtons.length > 0) {
          // Add event listeners to all buttons with class "trigger-modal"
          triggerButtons.forEach(function(button) {
            button.addEventListener("click", function() {
              modalOverlay.classList.add("open"); // Add "open" class to show the modal
            });
          });
    
          // Close modal when clicking the close button or the overlay (but not the modal itself)
          closeButton.addEventListener("click", function() {
            modalOverlay.classList.remove("open"); // Remove "open" class to hide the modal
          });
    
          modalOverlay.addEventListener("click", function(event) {
            if (!event.target.closest(".modal")) {
              modalOverlay.classList.remove("open");
            }
          });
        }
      });
    </script>
  





  </div>









